<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>RegexURL | AdBlockingStuff Docs</title>
</head>

<body>
  <style>
    body {
      background-color: black;
      color: white;
      font-family: Arial, Helvetica, sans-serif;
    }
    a {
      color: #0098fde3;
    }
    code {
      background-color: rgb(50, 50, 50);
      color: rgb(247, 255, 134);
    }
  </style>
  <!-- Autogenerated from https://markdowntohtml.com/ -->
  <h2 id="docs-regexurl">Docs: RegexURL</h2>
  <h3 id="what-what-">What <a href="#what">#</a></h3>
  <p>It is regular expressions with special meanings given to some extra characters: pound (#) and percent (%). Where <br>
    pound represents a top-level domain (TLD such as .com, .co.uk) and percent represents a subdomain.</p>
  <p>These go into the parser and turned into regular expressions. &quot;%&quot; gets turned into regex expression <br>
    &quot;([0-9,a-z,-]+\.)*&quot; and &quot;#&quot; gets turned into &quot;(\.\w+){1,2}&quot;, appends <br>
    &quot;^(https?):\/\/&quot; at the start and uses the global and case-insensitive flags for good measure.</p>
  <h3 id="how-how-">How <a href="#how">#</a></h3>
  <p>Say for example we want to block <a
      href="https://209740928734.somesub.pagead.example.com/pagead">https://209740928734.somesub.pagead.example.com/pagead</a> <br>
    and so on and we only want to block pagead.example.com and it&#39;s TLD derivaties, like pagead.example.co.uk, <br>
    pagead.example.au.</p>
  <p>We can write <code>%pagead\\.example#</code></p>
  <p>instead of <code>*://*.pagead.example.com/*</code></p>
  <p>or <code>^(https?)://([0-9,a-z,-]+\.)*pagead\.example(\.\w+){1,2}</code></p>
  <p>Here is another one. Say that said ad comapany uses 2-3 numbers after pagead (pagead21.example.com). If we <br>
    we&#39;re to use <a
      href="https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/Match_patterns">extension manifest <br>
      patterns</a>, this file will have to be very big, this is inneficent. Since we can implement regex in our list, we <br>
    can say <code>%pagead[0-9]+\\.example#</code> and reduce our file size by an order of magnitude.</p>
  <h3 id="where-where-">Where <a href="#where">#</a></h3>
  <p>This is applicable if: </p>
  <ul>
    <li>there are multiple but similar variants that have a regex-able domain.</li>
  </ul>
  <h3 id="what-it-can-do-can-do-">What it can do <a href="#can-do">#</a></h3>
  <ol>
    <li>Reduce the file size of a blocklist</li>
    <li>Save time spent on making a script to automate subdomain generation</li>
  </ol>
  <h3 id="what-it-can-t-do-cant-do-">What it can&#39;t do <a href="#cant-do">#</a></h3>
  <p>Block every similar domain - There are some <a href="https://www.clickadu.com/">advertising companies</a> that are <br>
    hellbent on pushing their <em>scum</em> ads they decide to smash their keyboard and use that as a domain name. <br>
    Others, just cut out the middleman and decide to use garbled trash as a domain name. Don&#39;t believe me? Open <br>
    <a href="https://raw.githubusercontent.com/notracking/hosts-blocklists/master/adblock/adblock.txt">this block list
      for AdBlock</a> and find for a .bazar TLD. While there are thousands of them, they can&#39;t be parsed.</p>

</body>

</html>